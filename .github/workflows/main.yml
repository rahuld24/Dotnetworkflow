#Dotnet workflow
name: Dotnet_workflow
on:
    workflow_dispatch:
        inputs:
          environments:
              description: Environment deployment
              type: environment
              required: true
jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: code checkout
              uses: actions/checkout@v4
            - name: setup dotnet
              uses: actions/setup-dotnet@v4
              with:
                  dotnet-version: '6.0.x'
            - name: setupJava
              uses: actions/setup-java@v4
              with:
                  distribution: 'temurin' 
                  java-version: '17'
            
            - name: Download sonar scanner for dotnet
              run: |
                dotnet tool install --global dotnet-sonarscanner
            - name: Restore dependencies
              run: |
                dotnet restore
            
            - name: Sonar Begin
              run: |
               dotnet sonarscanner begin /k:"Sonarintergration" /d:sonar.host.url="${{ vars.SONARHOST }}"  /d:sonar.token="${{ secrets.SONARTOKEN }}"
             
            - name: dotnet build
              run: |
                dotnet build

            - name: Sonar Ends
              run: |
                dotnet sonarscanner end /d:sonar.token="${{ secrets.SONARTOKEN }}"
            - name: Dotnet publish
              run: |
                dotnet publish -o ${{ vars.ARTIFACTPATH }}
            - name: upload artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: Dotnet artifact
                  path: ${{ github.workspace }}/${{ vars.ARTIFACTPATH }}
                  retention-days: 5
            - name: Dotnet Publish
              run: |
                dotnet publish -o ${{ vars.ARTIFACTPATH }}
    
            - name: upload artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: Build-Artifacts
                  path: ${{ github.workspace  }}/${{ vars.ARTIFACTPATH }}
                  retention-days: 5
    Deploy:
        needs: build
        runs-on: selfhosted
        if: ${{ inputs.environments }}
        environment: ${{ inputs.environments }}
        steps:
            - name: Build backup
              run: |
                cd ${{ vars.BACKUP_PATH }}
                ls -la
            - name: Backup Artifacts
              run: |
                Copy-Item -Path ${{ vars.DEPLOYMENTPATH }}/* -Destination ${{ vars.BACKUP_PATH }} -Force
            - name: Backup path
              run: |
                cd ${{ vars.BACKUP_PATH }}
                dir
            - name: Download artifacts
              uses: actions/download-artifact@v4
              with:
                  name: Build-artifacts
                  path: ${{ vars.DEPLOYMENTPATH }}
            - name: Restart IIS
              run: |
                echo "restart IIS"

            - name: check status
              run: |
                echo "IIS Status"

    rollback:
        needs: deploy
        runs-on: deploy
        environment: ${{ inputs.environments }}
        if: failure() && needs.deploy.result == 'failure'
        steps:
            - name: Copy Old Artifacts
              run: |
                Copy-Item -Path ${{ vars.BACKUP_PATH }}/* -Destination ${{ vars.DEPLOYMENTPATH }} -Force
            
            - name: Restart IIS
              run: |
                echo "restart IIS"
            
            - name: check status
              run: |
                echo "IIS Status"
